/* 演習09-02
 * 2つの整数値xとyの最大公約数をユークリッドの互除法を用いて求める関数
 * 作成日：5月18日
 * 作成者：成田修之
 * 更新日：5月22日
 * 更新者：成田修之
 */
#include<climits>
#include<iostream>
using namespace std;

/* 関数gcd
 * 2つの整数値の最大公約数をユークリッドの互除法によって求める関数
 * 引数は2つのint型
 * 返却値は2つの整数の最大公約数
 * 作成日：5月18日
 * 作成者：成田修之
 * 更新日：5月22日
 * 更新者：成田修之
 */

int gcd(int x,int y)
{
	//xがyで割り切れるとき
	if(x%y == 0) {
		//yを返却
		return y;
	//割り切れない時
	} else {
		//yとxをｙで割った剰余を実引数として再起呼び出し
		return(gcd(y,x%y));
	}

}

int main()
{
	int nInputX ;	//公約数を求めたい値を入力するため
	int nInputY ;	//公約数を求めたい値を入力するため

	//公約数を求めることを明示
	cout << "2つの整数の最大公約数を求めます。\n";
	cout << "整数A：";		//公約数を求めたい整数Aの入力を促す
	cin >> nInputX;			//キーボードから入力
	cout << "整数B：";		//公約数を求めたい整数Bの入力を促す
	cin >> nInputY;			//キーボードから入力

	//関数gcdを呼び出して公約数を求める
	cout << "二つの入力された値の最大公約数は" << gcd(nInputX,nInputY) << "です。\n";

	//main関数の返却値
	return 0;
}
